{"ast":null,"code":"var _jsxFileName = \"/Users/allanmacbook/Desktop/WebDevelopment/Stores/movies-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker'; //Store\n\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n};\n\nfunction counterReducer(state = {\n  value: 0\n}, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        value: state.value + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        value: state.value - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet s = createStore(counterReducer);\ns.subscribe(() => console.log(s.getState()));\ns.dispatch(increment());\ns.dispatch(decrement());\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/allanmacbook/Desktop/WebDevelopment/Stores/movies-app/src/index.js"],"names":["React","ReactDOM","App","store","Provider","serviceWorker","createStore","increment","type","decrement","counterReducer","state","value","action","s","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAM;AACJC,IAAAA,IAAI,EAAE;AADF,GAAN;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAM;AACJD,IAAAA,IAAI,EAAE;AADF,GAAN;AAGD,CAJD;;AAMA,SAASE,cAAT,CAAwBC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhC,EAA8CC,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEI,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD;;AAED,IAAIG,CAAC,GAAGR,WAAW,CAACI,cAAD,CAAnB;AACAI,CAAC,CAACC,SAAF,CAAY,MAAMC,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,QAAF,EAAZ,CAAlB;AACAJ,CAAC,CAACK,QAAF,CAAWZ,SAAS,EAApB;AACAO,CAAC,CAACK,QAAF,CAAWV,SAAS,EAApB;AAEAR,QAAQ,CAACmB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Store\r\nimport { createStore } from 'redux'\r\n\r\nconst increment = () => {\r\n  return{\r\n    type: 'INCREMENT'\r\n  }\r\n}\r\n\r\nconst decrement = () => {\r\n  return{\r\n    type: 'DECREMENT'\r\n  }\r\n}\r\n\r\nfunction counterReducer(state = { value: 0 }, action) {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { value: state.value + 1 }\r\n    case 'DECREMENT':\r\n      return { value: state.value - 1 }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet s = createStore(counterReducer);\r\ns.subscribe(() => console.log(s.getState()));\r\ns.dispatch(increment());\r\ns.dispatch(decrement());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}